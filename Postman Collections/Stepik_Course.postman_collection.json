{
	"info": {
		"_postman_id": "3dcc9cbe-a0f5-4945-8cfa-bd355087daaa",
		"name": "Stepik_Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "companies",
			"item": [
				{
					"name": "PM-1 CompaniesDefaultRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8e053ac9-ffa0-46d1-9787-b0edd1631636",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});\r",
									"let schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"data\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": \r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"company_id\": {\r",
									"              \"type\": \"integer\"\r",
									"            },\r",
									"            \"company_name\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"company_address\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"company_status\": {\r",
									"              \"type\": \"string\",\r",
									"              \"enum\": [ \"ACTIVE\", \"CLOSED\", \"BANKRUPT\" ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"company_id\",\r",
									"            \"company_name\",\r",
									"            \"company_address\",\r",
									"            \"company_status\"\r",
									"          ]\r",
									"        }\r",
									"    },\r",
									"    \"meta\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"limit\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"offset\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"total\": {\r",
									"          \"type\": \"integer\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"total\"\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"data\",\r",
									"    \"meta\"\r",
									"  ]\r",
									"};\r",
									"pm.test('Schema is valid', function() {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d07646ee-5639-43ae-9914-c18b987539f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/companies/"
					},
					"response": []
				},
				{
					"name": "PM-2 CompaniesWithoutSSL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebb4316c-1da0-44df-974e-07fd6ab1cff3",
								"exec": [
									"pm.test(\"Request by http\", function() {\r",
									"    pm.expect(pm.request.url.protocol).to.eql(\"http\")\r",
									"});\r",
									"pm.test(\"Headers is vaild\", function() {\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive');\r",
									"    pm.expect(pm.response.headers.get('Location')).to.eql('https://send-request.me/api/companies/');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "29e84ebd-e527-4d41-a962-d63c9d7aae88",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": "http://send-request.me/api/companies/"
					},
					"response": []
				},
				{
					"name": "PM-3 CompaniesWithLimitAndOffset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c7265fb-47d0-4e16-938b-a40b6cff7f77",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Verify query-params\", function () {\r",
									"    let limit = parseInt(pm.request.url.query.idx(0).value);\r",
									"    let offset = parseInt(pm.request.url.query.idx(1).value);\r",
									"    let metaLimit = pm.response.json().meta.limit;\r",
									"    let metaOffset = pm.response.json().meta.offset;\r",
									"\r",
									"    pm.expect(limit).to.eql(metaLimit);\r",
									"    pm.expect(offset).to.eql(metaOffset);\r",
									"})\r",
									"let DataJson = pm.response.json().data;\r",
									"pm.test(\"Verify offset\", function () {\r",
									"    pm.expect(DataJson[0].company_id).to.eql(3);\r",
									"    pm.expect(DataJson.slice(-1)[0].company_id).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f6868e66-d9c5-4a5d-a144-826d82c233f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?limit=5&offset=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-4 CompaniesWithstatusACTIVE",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b0afbea-a0ec-4bfd-ae9d-61eb2a9e4217",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "39e634ca-02ed-4852-b415-9e71fe80d9e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ACTIVE&limit=3&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-5 CompaniesWithstatusCLOSED",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "63522190-a902-41d3-be06-771ec7f6136b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cd6608e0-a205-4462-9482-b9a55a36d7e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=CLOSED&limit=3&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "CLOSED"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-6 CompaniesWithstatusBANKRUPT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42ad5eaa-6391-467c-bf5c-eb9dc2bd9f54",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2ec941ab-710f-47ce-841c-0e83193f653b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=BANKRUPT&limit=3&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "BANKRUPT"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-7 CompaniesWithInvQueryStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "984b3d7e-8f3b-4b33-9b89-b7cdf001d7c4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a747584a-34f1-4df5-a022-3b3c40f848cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ABC&limit=3&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ABC"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-8 CompaniesWithInvQueryLimit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04c55b9b-5a6c-4eb7-8c0b-58fac5bc8a17",
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a1547d55-2f00-4d4b-a42c-4e522a8e9b3b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ACTIVE&limit=-1&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "-1"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-9 CompaniesWithStrQueryLimit",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d5fa9b3-8b3a-4512-b7ff-09b193206173",
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8dcaeca2-78ba-4841-b37f-73a8984a67b8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ACTIVE&limit=abc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "abc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-10 CompaniesWithInvQueryOffset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c2b254b-183b-4a0c-b4f9-491318b7b30c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Verify query-params\", function () {\r",
									"    let limit = parseInt(pm.request.url.query.idx(0).value);\r",
									"    let offset = parseInt(pm.request.url.query.idx(1).value);\r",
									"    let metaLimit = pm.response.json().meta.limit;\r",
									"    let metaOffset = pm.response.json().meta.offset;\r",
									"\r",
									"    pm.expect(limit).to.eql(metaLimit);\r",
									"    pm.expect(offset).to.eql(metaOffset);\r",
									"})\r",
									"let DataJson = pm.response.json().data;\r",
									"pm.test(\"Verify offset\", function () {\r",
									"    pm.expect(DataJson[0].company_id).to.eql(1);\r",
									"    pm.expect(DataJson.slice(-1)[0].company_id).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f6e2d2cb-c067-448f-a115-5987470b8220",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ACTIVE&limit=3&offset=-1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-11 CompaniesWithStrQueryOffset",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb52c60d-21b6-4b7c-a7bd-200f881c45df",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});\r",
									"pm.test(\"Len of JSON with default limit\", function() {\r",
									"    let companiesCount = pm.response.json().data.length;\r",
									"    pm.expect(companiesCount).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5695c04d-3abf-49ee-8776-7bf9d2f23bdf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/companies/?status=ACTIVE&limit=3&offset=abc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"companies",
								""
							],
							"query": [
								{
									"key": "status",
									"value": "ACTIVE"
								},
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "offset",
									"value": "abc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PM-12 CompanyById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5a56fc09-dcfb-4f00-ad77-a4d1eefd9562",
								"exec": [
									"pm.test(\"Response when correct Accept-languege\", function() {\r",
									"    pm.expect(pm.response.json()).to.have.any.keys(\"description\", \"description_lang\")\r",
									"});\r",
									"\r",
									"if(pm.response.json().description_lang){\r",
									"    pm.test(\"description_lang === EN\", function() {\r",
									"        pm.expect(pm.response.json().description_lang[0].translation_lang).to.eql(\"EN\")}\r",
									"    )};\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "73a05c41-472d-438f-9acd-31d0d9f3d27f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/companies/1"
					},
					"response": []
				},
				{
					"name": "PM-13 CompanyByNonexId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e06cc383-f64a-4242-a9a6-7e91e1ef0983",
								"exec": [
									"pm.test(\"Response when correct Accept-languege\", function() {\r",
									"    pm.expect(pm.response.json()).to.have.any.keys(\"description\", \"description_lang\")\r",
									"});\r",
									"\r",
									"if(pm.response.json().description_lang){\r",
									"    pm.test(\"description_lang === EN\", function() {\r",
									"        pm.expect(pm.response.json().description_lang[0].translation_lang).to.eql(\"EN\")}\r",
									"    )};\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e29474ba-e64f-47ee-9a37-dcd017755f61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/companies/8"
					},
					"response": []
				},
				{
					"name": "PM-14 CompanyByIdLangRU",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3e2d48f-0df3-4fc6-87c3-d4d7ceea6015",
								"exec": [
									"pm.test(\"Response when correct Accept-languege\", function() {\r",
									"    pm.expect(pm.response.json()).to.have.any.keys(\"description\", \"description_lang\")\r",
									"});\r",
									"\r",
									"if(pm.response.json().description_lang){\r",
									"    pm.test(\"description_lang === EN\", function() {\r",
									"        pm.expect(pm.response.json().description_lang[0].translation_lang).to.eql(\"EN\")}\r",
									"    )};\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0d228f10-357d-4611-a1f9-996f0f69380b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "RU",
								"type": "text"
							}
						],
						"url": "{{baseUrl}}/api/companies/1"
					},
					"response": []
				}
			],
			"id": "cd60add7-4ea3-4640-bcd1-d147dd073e63"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "PM-19 UsersWithoutSSL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2682cfe5-6b51-4623-b6af-d963a162d11f",
								"exec": [
									"pm.test(\"Request by http\", function() {\r",
									"    pm.expect(pm.request.url.protocol).to.eql(\"http\")\r",
									"});\r",
									"pm.test(\"Headers is vaild\", function() {\r",
									"    pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "282b332d-522e-4d20-9150-8e6886a9f43a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"followRedirects": false
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "http://send-request.me/api/users"
					},
					"response": []
				},
				{
					"name": "PM-20 UserCreate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b8d5c759-7244-4c04-82b1-9f5c0fd32cd3",
								"exec": [
									"pm.collectionVariables.set(\"user_id\", pm.response.json().user_id);\r",
									"pm.collectionVariables.set(\"last_name\", pm.response.json().last_name);\r",
									"pm.collectionVariables.set(\"company_id\", pm.response.json().company_id);\r",
									"pm.collectionVariables.set(\"first_name\", pm.response.json().first_name);\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3fbf88d2-6f4e-4b42-b29d-39e787628f4f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Pifagor\",\r\n  \"last_name\": \"Samosskiy\",\r\n  \"company_id\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/users"
					},
					"response": []
				},
				{
					"name": "PM-25 GetCreatedUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7730234-0108-4467-8289-6212d7bc92f8",
								"exec": [
									"pm.collectionVariables.get(\"variable_key\");\r",
									"\r",
									"let first_name = pm.collectionVariables.get(\"first_name\");\r",
									"\r",
									"let last_name = pm.collectionVariables.get(\"last_name\");\r",
									"\r",
									"let company_id = pm.collectionVariables.get(\"company_id\");\r",
									"\r",
									"let user_id = pm.collectionVariables.get(\"user_id\");\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"\r",
									" \r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"let schema={\r",
									"\r",
									"  \"type\": \"object\",\r",
									"\r",
									"          \"properties\": {\r",
									"\r",
									"            \"first_name\": {\r",
									"\r",
									"              \"type\": \"string\", \r",
									"\r",
									"              \"enum\": [first_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"last_name\": {\r",
									"\r",
									"              \"type\": \"string\",\r",
									"\r",
									"              \"enum\": [last_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"company_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [company_id]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"user_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [user_id]\r",
									"\r",
									"            }\r",
									"\r",
									"          },\r",
									"\r",
									"          \"required\": [\r",
									"\r",
									"            \"last_name\",\r",
									"\r",
									"            \"user_id\"\r",
									"\r",
									"          ]\r",
									"\r",
									"};\r",
									"\r",
									" \r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"\r",
									"pm.response.to.have.jsonSchema(schema);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f3bb95ba-72da-444d-a1ae-42d96d9898d7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/users/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "PM-30 DeleteCreatedUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7dd5adc-c6f0-4fb3-bd0f-e8eeca3b48fd",
								"exec": [
									"pm.collectionVariables.get(\"variable_key\");\r",
									"\r",
									"let first_name = pm.collectionVariables.get(\"first_name\");\r",
									"\r",
									"let last_name = pm.collectionVariables.get(\"last_name\");\r",
									"\r",
									"let company_id = pm.collectionVariables.get(\"company_id\");\r",
									"\r",
									"let user_id = pm.collectionVariables.get(\"user_id\");\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"\r",
									" \r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"let schema={\r",
									"\r",
									"  \"type\": \"object\",\r",
									"\r",
									"          \"properties\": {\r",
									"\r",
									"            \"first_name\": {\r",
									"\r",
									"              \"type\": \"string\", \r",
									"\r",
									"              \"enum\": [first_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"last_name\": {\r",
									"\r",
									"              \"type\": \"string\",\r",
									"\r",
									"              \"enum\": [last_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"company_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [company_id]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"user_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [user_id]\r",
									"\r",
									"            }\r",
									"\r",
									"          },\r",
									"\r",
									"          \"required\": [\r",
									"\r",
									"            \"last_name\",\r",
									"\r",
									"            \"user_id\"\r",
									"\r",
									"          ]\r",
									"\r",
									"};\r",
									"\r",
									" \r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"\r",
									"pm.response.to.have.jsonSchema(schema);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "02b7314a-efe6-4d33-91f1-44a739a5a1a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/users/{{user_id}}"
					},
					"response": []
				},
				{
					"name": "PM-34 IssuesGetUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6f7932c-8bf4-4343-b5d6-c188114e670f",
								"exec": [
									"pm.collectionVariables.get(\"variable_key\");\r",
									"\r",
									"let first_name = pm.collectionVariables.get(\"first_name\");\r",
									"\r",
									"let last_name = pm.collectionVariables.get(\"last_name\");\r",
									"\r",
									"let company_id = pm.collectionVariables.get(\"company_id\");\r",
									"\r",
									"let user_id = pm.collectionVariables.get(\"user_id\");\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"pm.test(\"Headers is valid\", function() {\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
									"\r",
									" \r",
									"\r",
									"pm.expect(pm.response.headers.get('Connection')).to.eql('keep-alive')\r",
									"\r",
									" \r",
									"\r",
									"});\r",
									"\r",
									" \r",
									"\r",
									"let schema={\r",
									"\r",
									"  \"type\": \"object\",\r",
									"\r",
									"          \"properties\": {\r",
									"\r",
									"            \"first_name\": {\r",
									"\r",
									"              \"type\": \"string\", \r",
									"\r",
									"              \"enum\": [first_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"last_name\": {\r",
									"\r",
									"              \"type\": \"string\",\r",
									"\r",
									"              \"enum\": [last_name]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"company_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [company_id]\r",
									"\r",
									"            },\r",
									"\r",
									"            \"user_id\": {\r",
									"\r",
									"              \"type\": \"integer\",\r",
									"\r",
									"              \"enum\": [user_id]\r",
									"\r",
									"            }\r",
									"\r",
									"          },\r",
									"\r",
									"          \"required\": [\r",
									"\r",
									"            \"last_name\",\r",
									"\r",
									"            \"user_id\"\r",
									"\r",
									"          ]\r",
									"\r",
									"};\r",
									"\r",
									" \r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"\r",
									"pm.response.to.have.jsonSchema(schema);\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1dd9a57a-5022-472d-8db7-873687f86987",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api/issues/users/{{user_id}}"
					},
					"response": []
				}
			],
			"id": "0634da3c-94f1-4d27-96f0-7c560880d6a0"
		},
		{
			"name": "issues",
			"item": [],
			"id": "0146d462-bdfb-45bb-9b9d-0bff7fb0fc0e"
		}
	],
	"variable": [
		{
			"key": "first_name",
			"value": ""
		},
		{
			"key": "last_name",
			"value": ""
		},
		{
			"key": "company_id",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		}
	]
}